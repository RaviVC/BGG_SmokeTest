<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="31" passed="31">
  <reporter-output>
    <line>
      <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//a[contains(text(),'EU ELV Compliance:')]"}
  (Session info: chrome=67.0.3396.87)
  (Driver info: chromedriver=2.41.578737 (49da6702b16031c40d63e5618de03a32ff6c197e),platform=Windows NT 10.0.16299 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 60.02 seconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'
System info: host: 'INQ69CAI5B4JG32', ip: '10.115.143.36', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_161'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{mobileEmulationEnabled=false, hasTouchScreen=false, platform=XP, acceptSslCerts=false, goog:chromeOptions={debuggerAddress=localhost:59279}, acceptInsecureCerts=false, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.41.578737 (49da6702b16031c40d63e5618de03a32ff6c197e), userDataDir=C:\Users\TE328511\AppData\Local\Temp\scoped_dir4776_25254}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, version=67.0.3396.87, browserConnectionEnabled=false, nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}]
Session ID: 892c475e4b373933ec35200135d88d10
*** Element info: {Using=xpath, value=//a[contains(text(),'EU ELV Compliance:')]}]]>
    </line>
  </reporter-output>
  <suite name="TE_HybrisAutomation" duration-ms="494954" started-at="2019-04-23T14:16:16Z" finished-at="2019-04-23T14:24:31Z">
    <groups>
    </groups>
    <test name="HMC_Stage" duration-ms="219912" started-at="2019-04-23T14:16:16Z" finished-at="2019-04-23T14:19:56Z">
      <class name="com.te.test.Hybris_SmokeTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="setup" is-config="true" duration-ms="74" started-at="2019-04-23T14:16:16Z" finished-at="2019-04-23T14:16:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="reportSettings()[pri:0, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="reportSettings" is-config="true" duration-ms="264" started-at="2019-04-23T14:16:16Z" finished-at="2019-04-23T14:16:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportSettings -->
        <test-method status="PASS" signature="HMC_login(java.lang.String)[pri:0, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="HMC_login" duration-ms="7498" started-at="2019-04-23T14:16:16Z" finished-at="2019-04-23T14:16:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[stage]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- HMC_login -->
        <test-method status="PASS" signature="reportTearDown(org.testng.ITestResult)[pri:0, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="reportTearDown" is-config="true" duration-ms="6" started-at="2019-04-23T14:16:24Z" finished-at="2019-04-23T14:16:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=HMC_login status=SUCCESS method=Hybris_SmokeTest.HMC_login(java.lang.String)[pri:0, instance:com.te.test.Hybris_SmokeTest@735f7ae5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTearDown -->
        <test-method status="PASS" signature="Search_TCPN()[pri:1, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="Search_TCPN" duration-ms="24916" started-at="2019-04-23T14:16:24Z" depends-on-methods="com.te.test.Hybris_SmokeTest.HMC_login" finished-at="2019-04-23T14:16:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Search_TCPN -->
        <test-method status="PASS" signature="reportTearDown(org.testng.ITestResult)[pri:0, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="reportTearDown" is-config="true" duration-ms="0" started-at="2019-04-23T14:16:49Z" finished-at="2019-04-23T14:16:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Search_TCPN status=SUCCESS method=Hybris_SmokeTest.Search_TCPN()[pri:1, instance:com.te.test.Hybris_SmokeTest@735f7ae5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTearDown -->
        <test-method status="PASS" signature="Verify_TimeModifiedFieldTest()[pri:2, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="Verify_TimeModifiedFieldTest" duration-ms="3625" started-at="2019-04-23T14:16:49Z" depends-on-methods="com.te.test.Hybris_SmokeTest.Search_TCPN" finished-at="2019-04-23T14:16:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_TimeModifiedFieldTest -->
        <test-method status="PASS" signature="reportTearDown(org.testng.ITestResult)[pri:0, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="reportTearDown" is-config="true" duration-ms="0" started-at="2019-04-23T14:16:52Z" finished-at="2019-04-23T14:16:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_TimeModifiedFieldTest status=SUCCESS method=Hybris_SmokeTest.Verify_TimeModifiedFieldTest()[pri:2, instance:com.te.test.Hybris_SmokeTest@735f7ae5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTearDown -->
        <test-method status="PASS" signature="Verify_ImagesTabTest()[pri:3, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="Verify_ImagesTabTest" duration-ms="2864" started-at="2019-04-23T14:16:52Z" depends-on-methods="com.te.test.Hybris_SmokeTest.Search_TCPN" finished-at="2019-04-23T14:16:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_ImagesTabTest -->
        <test-method status="PASS" signature="reportTearDown(org.testng.ITestResult)[pri:0, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="reportTearDown" is-config="true" duration-ms="0" started-at="2019-04-23T14:16:55Z" finished-at="2019-04-23T14:16:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_ImagesTabTest status=SUCCESS method=Hybris_SmokeTest.Verify_ImagesTabTest()[pri:3, instance:com.te.test.Hybris_SmokeTest@735f7ae5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTearDown -->
        <test-method status="PASS" signature="Verify_LegacyStatusTest()[pri:4, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="Verify_LegacyStatusTest" duration-ms="2989" started-at="2019-04-23T14:16:55Z" depends-on-methods="com.te.test.Hybris_SmokeTest.Search_TCPN" finished-at="2019-04-23T14:16:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_LegacyStatusTest -->
        <test-method status="PASS" signature="reportTearDown(org.testng.ITestResult)[pri:0, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="reportTearDown" is-config="true" duration-ms="0" started-at="2019-04-23T14:16:58Z" finished-at="2019-04-23T14:16:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_LegacyStatusTest status=SUCCESS method=Hybris_SmokeTest.Verify_LegacyStatusTest()[pri:4, instance:com.te.test.Hybris_SmokeTest@735f7ae5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTearDown -->
        <test-method status="PASS" signature="Verify_PromoteStatusTest()[pri:5, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="Verify_PromoteStatusTest" duration-ms="51" started-at="2019-04-23T14:16:58Z" depends-on-methods="com.te.test.Hybris_SmokeTest.Search_TCPN" finished-at="2019-04-23T14:16:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_PromoteStatusTest -->
        <test-method status="PASS" signature="reportTearDown(org.testng.ITestResult)[pri:0, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="reportTearDown" is-config="true" duration-ms="1" started-at="2019-04-23T14:16:58Z" finished-at="2019-04-23T14:16:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_PromoteStatusTest status=SUCCESS method=Hybris_SmokeTest.Verify_PromoteStatusTest()[pri:5, instance:com.te.test.Hybris_SmokeTest@735f7ae5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTearDown -->
        <test-method status="PASS" signature="Verify_ReleaseStatusTest()[pri:6, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="Verify_ReleaseStatusTest" duration-ms="55" started-at="2019-04-23T14:16:58Z" depends-on-methods="com.te.test.Hybris_SmokeTest.Search_TCPN" finished-at="2019-04-23T14:16:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_ReleaseStatusTest -->
        <test-method status="PASS" signature="reportTearDown(org.testng.ITestResult)[pri:0, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="reportTearDown" is-config="true" duration-ms="1" started-at="2019-04-23T14:16:58Z" finished-at="2019-04-23T14:16:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_ReleaseStatusTest status=SUCCESS method=Hybris_SmokeTest.Verify_ReleaseStatusTest()[pri:6, instance:com.te.test.Hybris_SmokeTest@735f7ae5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTearDown -->
        <test-method status="PASS" signature="Verify_UniversalComplianceAttributesTest()[pri:7, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="Verify_UniversalComplianceAttributesTest" duration-ms="119" started-at="2019-04-23T14:16:58Z" depends-on-methods="com.te.test.Hybris_SmokeTest.Search_TCPN" finished-at="2019-04-23T14:16:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_UniversalComplianceAttributesTest -->
        <test-method status="PASS" signature="reportTearDown(org.testng.ITestResult)[pri:0, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="reportTearDown" is-config="true" duration-ms="0" started-at="2019-04-23T14:16:58Z" finished-at="2019-04-23T14:16:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_UniversalComplianceAttributesTest status=SUCCESS method=Hybris_SmokeTest.Verify_UniversalComplianceAttributesTest()[pri:7, instance:com.te.test.Hybris_SmokeTest@735f7ae5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTearDown -->
        <test-method status="PASS" signature="Verify_LocalComplianceAttributesTest()[pri:8, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="Verify_LocalComplianceAttributesTest" duration-ms="72218" started-at="2019-04-23T14:16:58Z" depends-on-methods="com.te.test.Hybris_SmokeTest.Search_TCPN" finished-at="2019-04-23T14:18:10Z">
          <reporter-output>
            <line>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//a[contains(text(),'EU ELV Compliance:')]"}
  (Session info: chrome=67.0.3396.87)
  (Driver info: chromedriver=2.41.578737 (49da6702b16031c40d63e5618de03a32ff6c197e),platform=Windows NT 10.0.16299 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 60.02 seconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'
System info: host: 'INQ69CAI5B4JG32', ip: '10.115.143.36', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_161'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{mobileEmulationEnabled=false, hasTouchScreen=false, platform=XP, acceptSslCerts=false, goog:chromeOptions={debuggerAddress=localhost:59279}, acceptInsecureCerts=false, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.41.578737 (49da6702b16031c40d63e5618de03a32ff6c197e), userDataDir=C:\Users\TE328511\AppData\Local\Temp\scoped_dir4776_25254}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, version=67.0.3396.87, browserConnectionEnabled=false, nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}]
Session ID: 892c475e4b373933ec35200135d88d10
*** Element info: {Using=xpath, value=//a[contains(text(),'EU ELV Compliance:')]}]]>
            </line>
          </reporter-output>
        </test-method> <!-- Verify_LocalComplianceAttributesTest -->
        <test-method status="PASS" signature="reportTearDown(org.testng.ITestResult)[pri:0, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="reportTearDown" is-config="true" duration-ms="1" started-at="2019-04-23T14:18:10Z" finished-at="2019-04-23T14:18:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_LocalComplianceAttributesTest status=SUCCESS method=Hybris_SmokeTest.Verify_LocalComplianceAttributesTest()[pri:8, instance:com.te.test.Hybris_SmokeTest@735f7ae5] output=no such element: Unable to locate element: {"method":"xpath","selector":"//a[contains(text(),'EU ELV Compliance:')]"}
  (Session info: chrome=67.0.3396.87)
  (Driver info: chromedriver=2.41.578737 (49da6702b16031c40d63e5618de03a32ff6c197e),platform=Windows NT 10.0.16299 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 60.02 seconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'
System info: host: 'INQ69CAI5B4JG32', ip: '10.115.143.36', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_161'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{mobileEmulationEnabled=false, hasTouchScreen=false, platform=XP, acceptSslCerts=false, goog:chromeOptions={debuggerAddress=localhost:59279}, acceptInsecureCerts=false, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.41.578737 (49da6702b16031c40d63e5618de03a32ff6c197e), userDataDir=C:\Users\TE328511\AppData\Local\Temp\scoped_dir4776_25254}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, version=67.0.3396.87, browserConnectionEnabled=false, nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}]
Session ID: 892c475e4b373933ec35200135d88d10
*** Element info: {Using=xpath, value=//a[contains(text(),'EU ELV Compliance:')]}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTearDown -->
        <test-method status="PASS" signature="Verify_DMtechDocsTest()[pri:11, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="Verify_DMtechDocsTest" duration-ms="4362" started-at="2019-04-23T14:18:10Z" depends-on-methods="com.te.test.Hybris_SmokeTest.Search_TCPN" finished-at="2019-04-23T14:18:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_DMtechDocsTest -->
        <test-method status="PASS" signature="reportTearDown(org.testng.ITestResult)[pri:0, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="reportTearDown" is-config="true" duration-ms="0" started-at="2019-04-23T14:18:15Z" finished-at="2019-04-23T14:18:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_DMtechDocsTest status=SUCCESS method=Hybris_SmokeTest.Verify_DMtechDocsTest()[pri:11, instance:com.te.test.Hybris_SmokeTest@735f7ae5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTearDown -->
        <test-method status="PASS" signature="Verify_CPRandSAPAttributes()[pri:12, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="Verify_CPRandSAPAttributes" duration-ms="3139" started-at="2019-04-23T14:18:15Z" depends-on-methods="com.te.test.Hybris_SmokeTest.Search_TCPN" finished-at="2019-04-23T14:18:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_CPRandSAPAttributes -->
        <test-method status="PASS" signature="reportTearDown(org.testng.ITestResult)[pri:0, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="reportTearDown" is-config="true" duration-ms="1" started-at="2019-04-23T14:18:18Z" finished-at="2019-04-23T14:18:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_CPRandSAPAttributes status=SUCCESS method=Hybris_SmokeTest.Verify_CPRandSAPAttributes()[pri:12, instance:com.te.test.Hybris_SmokeTest@735f7ae5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTearDown -->
        <test-method status="PASS" signature="Verify_SamplesTabTest()[pri:13, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="Verify_SamplesTabTest" duration-ms="2830" started-at="2019-04-23T14:18:18Z" depends-on-methods="com.te.test.Hybris_SmokeTest.Search_TCPN" finished-at="2019-04-23T14:18:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_SamplesTabTest -->
        <test-method status="PASS" signature="reportTearDown(org.testng.ITestResult)[pri:0, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="reportTearDown" is-config="true" duration-ms="0" started-at="2019-04-23T14:18:21Z" finished-at="2019-04-23T14:18:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_SamplesTabTest status=SUCCESS method=Hybris_SmokeTest.Verify_SamplesTabTest()[pri:13, instance:com.te.test.Hybris_SmokeTest@735f7ae5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTearDown -->
        <test-method status="PASS" signature="Verify_RestrictedPartsTest()[pri:14, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="Verify_RestrictedPartsTest" duration-ms="13761" started-at="2019-04-23T14:18:21Z" depends-on-methods="com.te.test.Hybris_SmokeTest.Search_TCPN" finished-at="2019-04-23T14:18:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_RestrictedPartsTest -->
        <test-method status="PASS" signature="reportTearDown(org.testng.ITestResult)[pri:0, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="reportTearDown" is-config="true" duration-ms="0" started-at="2019-04-23T14:18:35Z" finished-at="2019-04-23T14:18:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_RestrictedPartsTest status=SUCCESS method=Hybris_SmokeTest.Verify_RestrictedPartsTest()[pri:14, instance:com.te.test.Hybris_SmokeTest@735f7ae5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTearDown -->
        <test-method status="PASS" signature="Verify_BlankSearchTest()[pri:15, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="Verify_BlankSearchTest" duration-ms="17953" started-at="2019-04-23T14:18:35Z" depends-on-methods="com.te.test.Hybris_SmokeTest.Search_TCPN" finished-at="2019-04-23T14:18:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_BlankSearchTest -->
        <test-method status="PASS" signature="reportTearDown(org.testng.ITestResult)[pri:0, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="reportTearDown" is-config="true" duration-ms="1" started-at="2019-04-23T14:18:53Z" finished-at="2019-04-23T14:18:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_BlankSearchTest status=SUCCESS method=Hybris_SmokeTest.Verify_BlankSearchTest()[pri:15, instance:com.te.test.Hybris_SmokeTest@735f7ae5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTearDown -->
        <test-method status="PASS" signature="Verify_NavigationalAtrriOnCategoryLinkTest()[pri:16, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="Verify_NavigationalAtrriOnCategoryLinkTest" duration-ms="26934" started-at="2019-04-23T14:18:53Z" depends-on-methods="com.te.test.Hybris_SmokeTest.Search_TCPN" finished-at="2019-04-23T14:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_NavigationalAtrriOnCategoryLinkTest -->
        <test-method status="PASS" signature="reportTearDown(org.testng.ITestResult)[pri:0, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="reportTearDown" is-config="true" duration-ms="1" started-at="2019-04-23T14:19:19Z" finished-at="2019-04-23T14:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_NavigationalAtrriOnCategoryLinkTest status=SUCCESS method=Hybris_SmokeTest.Verify_NavigationalAtrriOnCategoryLinkTest()[pri:16, instance:com.te.test.Hybris_SmokeTest@735f7ae5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTearDown -->
        <test-method status="PASS" signature="Verify_GlobalAtrriOnCategoryLinkTest()[pri:17, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="Verify_GlobalAtrriOnCategoryLinkTest" duration-ms="142" started-at="2019-04-23T14:19:19Z" depends-on-methods="com.te.test.Hybris_SmokeTest.Search_TCPN" finished-at="2019-04-23T14:19:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_GlobalAtrriOnCategoryLinkTest -->
        <test-method status="PASS" signature="reportTearDown(org.testng.ITestResult)[pri:0, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="reportTearDown" is-config="true" duration-ms="1" started-at="2019-04-23T14:19:20Z" finished-at="2019-04-23T14:19:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_GlobalAtrriOnCategoryLinkTest status=SUCCESS method=Hybris_SmokeTest.Verify_GlobalAtrriOnCategoryLinkTest()[pri:17, instance:com.te.test.Hybris_SmokeTest@735f7ae5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTearDown -->
        <test-method status="PASS" signature="Verify_FacetSchemaLinkTest()[pri:18, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="Verify_FacetSchemaLinkTest" duration-ms="0" started-at="2019-04-23T14:19:20Z" depends-on-methods="com.te.test.Hybris_SmokeTest.Search_TCPN" finished-at="2019-04-23T14:19:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_FacetSchemaLinkTest -->
        <test-method status="PASS" signature="reportTearDown(org.testng.ITestResult)[pri:0, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="reportTearDown" is-config="true" duration-ms="1" started-at="2019-04-23T14:19:20Z" finished-at="2019-04-23T14:19:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_FacetSchemaLinkTest status=SUCCESS method=Hybris_SmokeTest.Verify_FacetSchemaLinkTest()[pri:18, instance:com.te.test.Hybris_SmokeTest@735f7ae5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTearDown -->
        <test-method status="PASS" signature="Verify_FacetChangeLogTest()[pri:19, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="Verify_FacetChangeLogTest" duration-ms="1" started-at="2019-04-23T14:19:20Z" depends-on-methods="com.te.test.Hybris_SmokeTest.Search_TCPN" finished-at="2019-04-23T14:19:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_FacetChangeLogTest -->
        <test-method status="PASS" signature="reportTearDown(org.testng.ITestResult)[pri:0, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="reportTearDown" is-config="true" duration-ms="1" started-at="2019-04-23T14:19:20Z" finished-at="2019-04-23T14:19:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_FacetChangeLogTest status=SUCCESS method=Hybris_SmokeTest.Verify_FacetChangeLogTest()[pri:19, instance:com.te.test.Hybris_SmokeTest@735f7ae5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTearDown -->
        <test-method status="PASS" signature="Verify_BUandBU_ContactField()[pri:20, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="Verify_BUandBU_ContactField" duration-ms="6818" started-at="2019-04-23T14:19:20Z" depends-on-methods="com.te.test.Hybris_SmokeTest.Search_TCPN" finished-at="2019-04-23T14:19:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_BUandBU_ContactField -->
        <test-method status="PASS" signature="reportTearDown(org.testng.ITestResult)[pri:0, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="reportTearDown" is-config="true" duration-ms="1" started-at="2019-04-23T14:19:26Z" finished-at="2019-04-23T14:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_BUandBU_ContactField status=SUCCESS method=Hybris_SmokeTest.Verify_BUandBU_ContactField()[pri:20, instance:com.te.test.Hybris_SmokeTest@735f7ae5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTearDown -->
        <test-method status="PASS" signature="Verify_CronJobs()[pri:21, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="Verify_CronJobs" duration-ms="21608" started-at="2019-04-23T14:19:26Z" depends-on-methods="com.te.test.Hybris_SmokeTest.Search_TCPN" finished-at="2019-04-23T14:19:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_CronJobs -->
        <test-method status="PASS" signature="reportTearDown(org.testng.ITestResult)[pri:0, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="reportTearDown" is-config="true" duration-ms="1" started-at="2019-04-23T14:19:48Z" finished-at="2019-04-23T14:19:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_CronJobs status=SUCCESS method=Hybris_SmokeTest.Verify_CronJobs()[pri:21, instance:com.te.test.Hybris_SmokeTest@735f7ae5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTearDown -->
        <test-method status="PASS" signature="verify_CloseSession()[pri:22, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="verify_CloseSession" duration-ms="7066" started-at="2019-04-23T14:19:48Z" depends-on-methods="com.te.test.Hybris_SmokeTest.Search_TCPN" finished-at="2019-04-23T14:19:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_CloseSession -->
        <test-method status="PASS" signature="reportTearDown(org.testng.ITestResult)[pri:0, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="reportTearDown" is-config="true" duration-ms="0" started-at="2019-04-23T14:19:55Z" finished-at="2019-04-23T14:19:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_CloseSession status=SUCCESS method=Hybris_SmokeTest.verify_CloseSession()[pri:22, instance:com.te.test.Hybris_SmokeTest@735f7ae5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTearDown -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="afterClass" is-config="true" duration-ms="554" started-at="2019-04-23T14:19:55Z" finished-at="2019-04-23T14:19:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.te.test.Hybris_SmokeTest -->
    </test> <!-- HMC_Stage -->
    <test name="ProductCockpit_Stage" duration-ms="105558" started-at="2019-04-23T14:19:56Z" finished-at="2019-04-23T14:21:41Z">
      <class name="com.te.test.ProductCockpit_SmokeTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.te.test.ProductCockpit_SmokeTest@36f6e879]" name="setup" is-config="true" duration-ms="8" started-at="2019-04-23T14:19:56Z" finished-at="2019-04-23T14:19:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="reportSettings()[pri:0, instance:com.te.test.ProductCockpit_SmokeTest@36f6e879]" name="reportSettings" is-config="true" duration-ms="7" started-at="2019-04-23T14:19:56Z" finished-at="2019-04-23T14:19:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportSettings -->
        <test-method status="PASS" signature="PC_loginTest(java.lang.String)[pri:0, instance:com.te.test.ProductCockpit_SmokeTest@36f6e879]" name="PC_loginTest" duration-ms="35232" started-at="2019-04-23T14:19:56Z" finished-at="2019-04-23T14:20:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[stage]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PC_loginTest -->
        <test-method status="PASS" signature="reportTearDown(org.testng.ITestResult)[pri:0, instance:com.te.test.ProductCockpit_SmokeTest@36f6e879]" name="reportTearDown" is-config="true" duration-ms="0" started-at="2019-04-23T14:20:31Z" finished-at="2019-04-23T14:20:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PC_loginTest status=SUCCESS method=ProductCockpit_SmokeTest.PC_loginTest(java.lang.String)[pri:0, instance:com.te.test.ProductCockpit_SmokeTest@36f6e879] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTearDown -->
        <test-method status="PASS" signature="PC_SearchTest()[pri:1, instance:com.te.test.ProductCockpit_SmokeTest@36f6e879]" name="PC_SearchTest" duration-ms="19076" started-at="2019-04-23T14:20:31Z" depends-on-methods="com.te.test.ProductCockpit_SmokeTest.PC_loginTest" finished-at="2019-04-23T14:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PC_SearchTest -->
        <test-method status="PASS" signature="PC_ImageGroupTest()[pri:2, instance:com.te.test.ProductCockpit_SmokeTest@36f6e879]" name="PC_ImageGroupTest" duration-ms="108" started-at="2019-04-23T14:20:50Z" depends-on-methods="com.te.test.ProductCockpit_SmokeTest.PC_SearchTest" finished-at="2019-04-23T14:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PC_ImageGroupTest -->
        <test-method status="PASS" signature="reportTearDown(org.testng.ITestResult)[pri:0, instance:com.te.test.ProductCockpit_SmokeTest@36f6e879]" name="reportTearDown" is-config="true" duration-ms="0" started-at="2019-04-23T14:20:50Z" finished-at="2019-04-23T14:20:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PC_SearchTest status=SUCCESS method=ProductCockpit_SmokeTest.PC_SearchTest()[pri:1, instance:com.te.test.ProductCockpit_SmokeTest@36f6e879] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTearDown -->
        <test-method status="PASS" signature="reportTearDown(org.testng.ITestResult)[pri:0, instance:com.te.test.ProductCockpit_SmokeTest@36f6e879]" name="reportTearDown" is-config="true" duration-ms="1" started-at="2019-04-23T14:20:50Z" finished-at="2019-04-23T14:20:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PC_ImageGroupTest status=SUCCESS method=ProductCockpit_SmokeTest.PC_ImageGroupTest()[pri:2, instance:com.te.test.ProductCockpit_SmokeTest@36f6e879] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTearDown -->
        <test-method status="PASS" signature="PC_CPRAttributeTest()[pri:3, instance:com.te.test.ProductCockpit_SmokeTest@36f6e879]" name="PC_CPRAttributeTest" duration-ms="509" started-at="2019-04-23T14:20:50Z" depends-on-methods="com.te.test.ProductCockpit_SmokeTest.PC_SearchTest" finished-at="2019-04-23T14:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PC_CPRAttributeTest -->
        <test-method status="PASS" signature="reportTearDown(org.testng.ITestResult)[pri:0, instance:com.te.test.ProductCockpit_SmokeTest@36f6e879]" name="reportTearDown" is-config="true" duration-ms="0" started-at="2019-04-23T14:20:51Z" finished-at="2019-04-23T14:20:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PC_CPRAttributeTest status=SUCCESS method=ProductCockpit_SmokeTest.PC_CPRAttributeTest()[pri:3, instance:com.te.test.ProductCockpit_SmokeTest@36f6e879] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTearDown -->
        <test-method status="PASS" signature="PC_ComplianceAttrTest()[pri:4, instance:com.te.test.ProductCockpit_SmokeTest@36f6e879]" name="PC_ComplianceAttrTest" duration-ms="88" started-at="2019-04-23T14:20:51Z" depends-on-methods="com.te.test.ProductCockpit_SmokeTest.PC_SearchTest" finished-at="2019-04-23T14:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PC_ComplianceAttrTest -->
        <test-method status="PASS" signature="reportTearDown(org.testng.ITestResult)[pri:0, instance:com.te.test.ProductCockpit_SmokeTest@36f6e879]" name="reportTearDown" is-config="true" duration-ms="0" started-at="2019-04-23T14:20:51Z" finished-at="2019-04-23T14:20:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PC_ComplianceAttrTest status=SUCCESS method=ProductCockpit_SmokeTest.PC_ComplianceAttrTest()[pri:4, instance:com.te.test.ProductCockpit_SmokeTest@36f6e879] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTearDown -->
        <test-method status="PASS" signature="PC_SamplesTest()[pri:5, instance:com.te.test.ProductCockpit_SmokeTest@36f6e879]" name="PC_SamplesTest" duration-ms="109" started-at="2019-04-23T14:20:51Z" depends-on-methods="com.te.test.ProductCockpit_SmokeTest.PC_SearchTest" finished-at="2019-04-23T14:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PC_SamplesTest -->
        <test-method status="PASS" signature="PC_SamplesIndicatorVerifyPencilButtonTest()[pri:6, instance:com.te.test.ProductCockpit_SmokeTest@36f6e879]" name="PC_SamplesIndicatorVerifyPencilButtonTest" duration-ms="14069" started-at="2019-04-23T14:20:51Z" depends-on-methods="com.te.test.ProductCockpit_SmokeTest.PC_SearchTest" finished-at="2019-04-23T14:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PC_SamplesIndicatorVerifyPencilButtonTest -->
        <test-method status="PASS" signature="reportTearDown(org.testng.ITestResult)[pri:0, instance:com.te.test.ProductCockpit_SmokeTest@36f6e879]" name="reportTearDown" is-config="true" duration-ms="0" started-at="2019-04-23T14:20:51Z" finished-at="2019-04-23T14:20:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PC_SamplesTest status=SUCCESS method=ProductCockpit_SmokeTest.PC_SamplesTest()[pri:5, instance:com.te.test.ProductCockpit_SmokeTest@36f6e879] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTearDown -->
        <test-method status="PASS" signature="reportTearDown(org.testng.ITestResult)[pri:0, instance:com.te.test.ProductCockpit_SmokeTest@36f6e879]" name="reportTearDown" is-config="true" duration-ms="1" started-at="2019-04-23T14:21:05Z" finished-at="2019-04-23T14:21:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PC_SamplesIndicatorVerifyPencilButtonTest status=SUCCESS method=ProductCockpit_SmokeTest.PC_SamplesIndicatorVerifyPencilButtonTest()[pri:6, instance:com.te.test.ProductCockpit_SmokeTest@36f6e879] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTearDown -->
        <test-method status="PASS" signature="PC_AdvancedSearch()[pri:7, instance:com.te.test.ProductCockpit_SmokeTest@36f6e879]" name="PC_AdvancedSearch" duration-ms="36263" started-at="2019-04-23T14:21:05Z" finished-at="2019-04-23T14:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PC_AdvancedSearch -->
        <test-method status="PASS" signature="reportTearDown(org.testng.ITestResult)[pri:0, instance:com.te.test.ProductCockpit_SmokeTest@36f6e879]" name="reportTearDown" is-config="true" duration-ms="0" started-at="2019-04-23T14:21:41Z" finished-at="2019-04-23T14:21:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PC_AdvancedSearch status=SUCCESS method=ProductCockpit_SmokeTest.PC_AdvancedSearch()[pri:7, instance:com.te.test.ProductCockpit_SmokeTest@36f6e879] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTearDown -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.te.test.ProductCockpit_SmokeTest@36f6e879]" name="afterClass" is-config="true" duration-ms="83" started-at="2019-04-23T14:21:41Z" finished-at="2019-04-23T14:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.te.test.ProductCockpit_SmokeTest -->
    </test> <!-- ProductCockpit_Stage -->
    <test name="ImportCockpit_Stage" duration-ms="169310" started-at="2019-04-23T14:21:41Z" finished-at="2019-04-23T14:24:31Z">
      <class name="com.te.test.Hybris_SmokeTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:com.te.test.Hybris_SmokeTest@735f7ae5]" name="beforeSuite" is-config="true" duration-ms="6739" started-at="2019-04-23T14:16:09Z" finished-at="2019-04-23T14:16:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
      </class> <!-- com.te.test.Hybris_SmokeTest -->
      <class name="com.te.test.ImportCockpit_SmokeTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.te.test.ImportCockpit_SmokeTest@234bef66]" name="setup" is-config="true" duration-ms="8" started-at="2019-04-23T14:21:41Z" finished-at="2019-04-23T14:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="reportSettings()[pri:0, instance:com.te.test.ImportCockpit_SmokeTest@234bef66]" name="reportSettings" is-config="true" duration-ms="4" started-at="2019-04-23T14:21:41Z" finished-at="2019-04-23T14:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportSettings -->
        <test-method status="PASS" signature="IC_Login(java.lang.String)[pri:0, instance:com.te.test.ImportCockpit_SmokeTest@234bef66]" name="IC_Login" duration-ms="51565" started-at="2019-04-23T14:21:41Z" finished-at="2019-04-23T14:22:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[stage]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IC_Login -->
        <test-method status="PASS" signature="massSampleExport()[pri:1, instance:com.te.test.ImportCockpit_SmokeTest@234bef66]" name="massSampleExport" duration-ms="115817" started-at="2019-04-23T14:22:33Z" depends-on-methods="com.te.test.ImportCockpit_SmokeTest.IC_Login" finished-at="2019-04-23T14:24:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- massSampleExport -->
        <test-method status="PASS" signature="reportTearDown(org.testng.ITestResult)[pri:0, instance:com.te.test.ImportCockpit_SmokeTest@234bef66]" name="reportTearDown" is-config="true" duration-ms="0" started-at="2019-04-23T14:22:33Z" finished-at="2019-04-23T14:22:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IC_Login status=SUCCESS method=ImportCockpit_SmokeTest.IC_Login(java.lang.String)[pri:0, instance:com.te.test.ImportCockpit_SmokeTest@234bef66] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTearDown -->
        <test-method status="PASS" signature="reportTearDown(org.testng.ITestResult)[pri:0, instance:com.te.test.ImportCockpit_SmokeTest@234bef66]" name="reportTearDown" is-config="true" duration-ms="1" started-at="2019-04-23T14:24:29Z" finished-at="2019-04-23T14:24:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=massSampleExport status=SUCCESS method=ImportCockpit_SmokeTest.massSampleExport()[pri:1, instance:com.te.test.ImportCockpit_SmokeTest@234bef66] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTearDown -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.te.test.ImportCockpit_SmokeTest@234bef66]" name="afterClass" is-config="true" duration-ms="90" started-at="2019-04-23T14:24:29Z" finished-at="2019-04-23T14:24:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.te.test.ImportCockpit_SmokeTest@234bef66]" name="tearDown" is-config="true" duration-ms="1821" started-at="2019-04-23T14:24:29Z" finished-at="2019-04-23T14:24:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.te.test.ImportCockpit_SmokeTest -->
    </test> <!-- ImportCockpit_Stage -->
  </suite> <!-- TE_HybrisAutomation -->
</testng-results>
